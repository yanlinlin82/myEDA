% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cachedAssign.R
\name{cachedAssign}
\alias{cacheExists}
\alias{cachedAssign}
\alias{loadCache}
\title{Assign a Value to a Name with Cache Mechanism.}
\usage{
cachedAssign(x, value, force = FALSE)

loadCache(x, force = FALSE)

cacheExists(x)
}
\arguments{
\item{x}{a variable name, given as a character string.}

\item{value}{a value to be assigned to ‘x’.}

\item{force}{force to overwrite or load from the cache file.}
}
\value{
like 'assign()' in 'base' package, this function is invoked for its
side effect, which is assigning 'value' to the variable 'x'.
}
\description{
Assign a value to a name in an environment with cache mechanism.
}
\details{
When it is the first time to assign some variable with 'cachedAssign()',
expression of 'value' will be evaluated, saved to cache file, and then assigned
to variable 'x'. After that, as the cache file exists, evaluation of 'value'
will be skipped, and value stored in cache file will be loaded and assigned to
'x' instead.

Cache files are stored in cache directory, as the same name as the varaibles,
with extension name '.rds'. By default, the cache directory is set to 'cached/',
that means variable 'foo' will be stored as cache file 'cached/foo.rds'. The
cache directory can be configured by 'option("cache.directory")'

'loadCache()' just loads value from existed cache file, and it will fail when
cache file does not exist.

'cacheExists()' is for checking if a variable has been cached.
}

